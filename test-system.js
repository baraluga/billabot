const axios = require('axios');

const API_BASE = 'http://localhost:3001';

async function testSystem() {
  console.log('üß™ Testing BillaBot System Integration...\n');
  
  try {
    // Test 1: Health check
    console.log('1Ô∏è‚É£ Testing health check...');
    const healthResponse = await axios.get(`${API_BASE}/health`);
    console.log('‚úÖ Health check passed:', healthResponse.data.status);

    // Test 2: Enhanced analysis
    console.log('\n2Ô∏è‚É£ Testing enhanced team analysis...');
    const analysisResponse = await axios.get(`${API_BASE}/api/enhanced-analysis?days=7`);
    const analysis = analysisResponse.data;
    
    console.log('‚úÖ Enhanced analysis passed:');
    console.log(`   ‚Ä¢ Users: ${analysis.summary.totalUsers}`);
    console.log(`   ‚Ä¢ Plans: ${analysis.summary.totalPlans}`);
    console.log(`   ‚Ä¢ Worklogs: ${analysis.summary.totalWorklogs}`);
    console.log(`   ‚Ä¢ Billability: ${analysis.teamMetrics.billability.overallBillabilityRate}%`);
    console.log(`   ‚Ä¢ User enrichment: ${analysis.jiraIntegration.enrichmentRate}%`);

    // Test 3: Natural language query
    console.log('\n3Ô∏è‚É£ Testing natural language query...');
    const queryResponse = await axios.post(`${API_BASE}/api/query`, {
      query: 'How is our team doing this week?'
    });
    const queryResult = queryResponse.data;
    
    console.log('‚úÖ Natural language query passed:');
    console.log(`   ‚Ä¢ Query: "${queryResult.query}"`);
    console.log(`   ‚Ä¢ Type: ${queryResult.type}`);
    console.log(`   ‚Ä¢ Summary: ${queryResult.summary}`);

    // Test 4: JIRA integration
    console.log('\n4Ô∏è‚É£ Testing JIRA integration...');
    const jiraResponse = await axios.get(`${API_BASE}/api/jira/users?maxResults=5`);
    console.log('‚úÖ JIRA integration passed:');
    console.log(`   ‚Ä¢ Retrieved ${jiraResponse.data.length} users`);

    console.log('\nüéâ All tests passed! BillaBot system is working correctly.');
    console.log('\nüìä System Summary:');
    console.log('   ‚Ä¢ ‚úÖ Backend API: Running on port 3001');
    console.log('   ‚Ä¢ ‚úÖ JIRA Integration: Connected');
    console.log('   ‚Ä¢ ‚úÖ Tempo Integration: Connected');
    console.log('   ‚Ä¢ ‚úÖ Enhanced Analysis: Working');
    console.log('   ‚Ä¢ ‚úÖ Natural Language Query: Working');
    console.log('   ‚Ä¢ ‚úÖ MCP Plugin: Ready (run separately)');
    console.log('   ‚Ä¢ ‚úÖ Frontend: Ready (run with npm run dev)');
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.response?.data || error.message);
    process.exit(1);
  }
}

testSystem();